# install puppeteer
npm i --save puppeteer

#install express
npm install express --save 

# fetch
npm install node-fetch --save
npm install qs
npm install js-yaml

#Test
 curl --request POST \
   --url http://localhost:3000/api/initiate \
   --header 'content-type: application/json' \
   --data '{
     "id":"123",
     "bankName" : "hdfc",
     "cardType" : "credit",
     "cardScheme" : "visa",
     "payUrl" : "https://test.cashfree.com/headless/pay.php?txnId=1594331651&card=VISA",
     "reqType" : "get",
     "reqParams" : {}
 }'

 curl --request POST \
   --url http://localhost:3000/api/resendOtp \
   --header 'content-type: application/json' \
   --data '{
     "id" : "123"
 }'

 curl --request POST \
   --url http://localhost:3000/api/otp \
   --header 'content-type: application/json' \
   --data '{
     "id":"123",
     "otp" : "733136"
 }'

# TODO
1. Input validation (easy)
2. Error handling 
    2.1 Timeouts for each API call (what if bank page does not load)
    2.2 Error response if service cannot handle a new page
    2.3 Error response if service goes down, what should the caller do

3. Metrics
    3.1 Current metrics for the servie - cpu, memory, etc.
    3.2 Current metrics for pages etc. 

4. Logic improvement
    4.1 Resend otp should increase timeout
    4.2 Otp attempts and other details are in-memory (so if service crashes) all ongoing payments will fail

5. Easy way for caller service to know if the service is up 
